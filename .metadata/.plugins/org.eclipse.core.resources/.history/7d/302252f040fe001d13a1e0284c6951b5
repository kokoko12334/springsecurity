package com;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.http.HttpMethod;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.config.authentication.UserServiceBeanDefinitionParser;
import org.springframework.security.config.http.SessionCreationPolicy;
import org.springframework.security.web.SecurityFilterChain;
import org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter;

import com.test.Service.LoginService;

import lombok.RequiredArgsConstructor;

// password는 콘솔창에 있고 id는 user이다.
@Configuration
@EnableWebSecurity
@RequiredArgsConstructor
public class AuthenticationConfig {
	
	private final LoginService loginsvc;
	@Value("${jwt.secret}")
	private String secretKey;
	
	@Bean
    public SecurityFilterChain filterChain(HttpSecurity http) throws Exception {
     
        	http
        		.httpBasic().disable()
        		.csrf().disable()
        		.cors().and()
        		.authorizeHttpRequests()
        		.requestMatchers("/", "/login", "/join").permitAll()
                .requestMatchers("/main/*").authenticated()
                .and()
                .sessionManagement()
                .sessionCreationPolicy(SessionCreationPolicy.STATELESS) //jwt인증
                .and()
                .addFilterBefore(new JwtFilter(loginsvc,secretKey), UsernamePasswordAuthenticationFilter.class)
                ;
 
        return http.build();
    }
}
